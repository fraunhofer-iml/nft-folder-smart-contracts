stages:
  - build
  - test
  - analyze

variables:
  GITLAB_TAG: 'be'
  GIT_DEPTH: 0
  HUSKY: 0
  NPM_CI: npm ci --include dev --cache .npm --prefer-offline
  SLITHER_ANALYZER_PACKAGE: slither-analyzer==0.10.4

default:
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm
  image: node:20-alpine3.19
  timeout: 20 minutes

#############
### build ###
#############

install-dependencies:
  stage: build
  script:
    - $NPM_CI
  rules:
    - when: always

compile-contracts:
  stage: build
  needs:
    - 'install-dependencies'
  before_script:
    - $NPM_CI
  script:
    - npm run compile
  artifacts:
    name: 'compiled-smart-contracts'
    expose_as: 'Compiled Smart Contracts'
    expire_in: 20 minutes
    paths:
      - artifacts
      - cache
      - typechain-types
  rules:
    - when: on_success

############
### test ###
############

run-unit-tests:
  stage: test
  before_script:
    - $NPM_CI
  script:
    - npm run coverage
  artifacts:
    paths:
      - coverage/
    expire_in: 1 hour
  rules:
    - when: on_success

###############
### analyze ###
###############

run-eslint:
  stage: analyze
  before_script:
    - $NPM_CI
  script:
    - npm run eslint-check
  rules:
    - when: on_success

run-prettier:
  stage: analyze
  before_script:
    - $NPM_CI
  script:
    - npm run prettier-check
  rules:
    - when: on_success

run-slither:
  stage: analyze
  before_script:
    - $NPM_CI
    - apk --update add gcc libc-dev python3-dev py3-pip
    - python3 -m venv .venv
    - source .venv/bin/activate
    - pip install --upgrade pip
    - pip install wheel ${SLITHER_ANALYZER_PACKAGE}
  script:
    - slither . --exclude-dependencies --filter-paths openzeppelin
  rules:
    - when: on_success

run-solhint:
  stage: analyze
  before_script:
    - $NPM_CI
  script:
    - npm run solhint
  rules:
    - when: on_success

# SonarQube currently doesn't support Solidity files
run-sonar-scanner:
  stage: analyze
  image: sonarsource/sonar-scanner-cli
  script:
    - >
      sonar-scanner
      -Dproject.settings=sonar.properties
      -Dsonar.host.url="${SONAR_HOST_URL}"
      -Dsonar.login="${SONAR_TOKEN}"
  rules:
    - when: on_success
